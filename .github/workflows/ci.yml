name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  offline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', 'requirements*.txt', 'setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Run offline pipeline
        run: ./scripts/ci_offline.sh

  replay:
    runs-on: ubuntu-latest
    needs: offline
    steps:
      - uses: actions/checkout@v3
      - name: Check for replay cassettes
        id: detect
        run: |
          if [ -d ".douglas/cassettes" ] && [ -n "$(ls -A .douglas/cassettes 2>/dev/null)" ]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Set up Python
        if: steps.detect.outputs.has == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Cache pip
        if: steps.detect.outputs.has == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', 'requirements*.txt', 'setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        if: steps.detect.outputs.has == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run replay pipeline
        if: steps.detect.outputs.has == 'true'
        run: ./scripts/ci_replay.sh
